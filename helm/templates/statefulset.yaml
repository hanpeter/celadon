{{- if .Values.database.enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.application.name }}-database
  labels:
    app.kubernetes.io/name: {{ .Values.application.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: database
spec:
  serviceName: {{ .Values.application.name }}-database
  replicas: {{ .Values.database.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.application.name }}-database
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.application.name }}-database
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        app.kubernetes.io/component: database
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.database.port }}
          env:
            - name: POSTGRESQL_PORT_NUMBER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application.name }}-database
                  key: database_port
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application.name }}-database
                  key: database_name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application.name }}-database
                  key: database_username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application.name }}-database
                  key: database_password
          volumeMounts:
            {{- if .Values.database.initdb }}
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            {{- end }}
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        {{- if .Values.database.initdb }}
        - name: custom-init-scripts
          configMap:
            name: {{ .Values.application.name }}-database-init-scripts
        {{- end }}
        - name: data
          emptyDir: {}
{{- end }}
